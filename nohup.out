wandb: Appending key for api.wandb.ai to your netrc file: /home/jovyan/.netrc
wandb: W&B API key is configured. Use `wandb login --relogin` to force relogin
Running with hyperparameters:
Actor LR: 1e-6
Critic LR: 1e-5
KL Coefficient: 0.001
Number of Generations Validation: 1
Train Batch Size: 1024
PPO Mini Batch Size: 256
PPO Micro Batch Size: 32
Total Epochs: 10
Max Response Length: 1024
GPU Memory Utilization: 0.7
Test Frequency: 3
Number of GPUs: 4
Compute Prompts Values: False
Experiment Name: ppo_Math1.5B_tok1k_dapo17k
2025-04-18 17:13:57,631	INFO worker.py:1832 -- Started a local Ray instance. View the dashboard at [1m[32m127.0.0.1:8265 [39m[22m
[36m(main_task pid=13351)[0m {'actor_rollout_ref': {'actor': {'clip_ratio': 0.2,
[36m(main_task pid=13351)[0m                                  'entropy_coeff': 0.001,
[36m(main_task pid=13351)[0m                                  'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=13351)[0m                                                  'optimizer_offload': False,
[36m(main_task pid=13351)[0m                                                  'param_offload': False,
[36m(main_task pid=13351)[0m                                                  'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=13351)[0m                                  'grad_clip': 1.0,
[36m(main_task pid=13351)[0m                                  'kl_loss_coef': 0.001,
[36m(main_task pid=13351)[0m                                  'kl_loss_type': 'low_var_kl',
[36m(main_task pid=13351)[0m                                  'optim': {'lr': 1e-06,
[36m(main_task pid=13351)[0m                                            'lr_warmup_steps': -1,
[36m(main_task pid=13351)[0m                                            'lr_warmup_steps_ratio': 0.0,
[36m(main_task pid=13351)[0m                                            'min_lr_ratio': None,
[36m(main_task pid=13351)[0m                                            'total_training_steps': -1,
[36m(main_task pid=13351)[0m                                            'warmup_style': 'constant'},
[36m(main_task pid=13351)[0m                                  'ppo_epochs': 1,
[36m(main_task pid=13351)[0m                                  'ppo_max_token_len_per_gpu': 16384,
[36m(main_task pid=13351)[0m                                  'ppo_micro_batch_size': None,
[36m(main_task pid=13351)[0m                                  'ppo_micro_batch_size_per_gpu': 32,
[36m(main_task pid=13351)[0m                                  'ppo_mini_batch_size': 256,
[36m(main_task pid=13351)[0m                                  'response_length': 1024,
[36m(main_task pid=13351)[0m                                  'shuffle': False,
[36m(main_task pid=13351)[0m                                  'strategy': 'fsdp',
[36m(main_task pid=13351)[0m                                  'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=13351)[0m                                  'use_doctor_grpo': True,
[36m(main_task pid=13351)[0m                                  'use_dynamic_bsz': False,
[36m(main_task pid=13351)[0m                                  'use_kl_loss': False,
[36m(main_task pid=13351)[0m                                  'use_torch_compile': True},
[36m(main_task pid=13351)[0m                        'hybrid_engine': True,
[36m(main_task pid=13351)[0m                        'model': {'enable_gradient_checkpointing': True,
[36m(main_task pid=13351)[0m                                  'external_lib': None,
[36m(main_task pid=13351)[0m                                  'override_config': {},
[36m(main_task pid=13351)[0m                                  'path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=13351)[0m                                  'use_remove_padding': True},
[36m(main_task pid=13351)[0m                        'ref': {'fsdp_config': {'param_offload': False,
[36m(main_task pid=13351)[0m                                                'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=13351)[0m                                'log_prob_max_token_len_per_gpu': 16384,
[36m(main_task pid=13351)[0m                                'log_prob_micro_batch_size': None,
[36m(main_task pid=13351)[0m                                'log_prob_micro_batch_size_per_gpu': 32,
[36m(main_task pid=13351)[0m                                'log_prob_use_dynamic_bsz': False,
[36m(main_task pid=13351)[0m                                'ulysses_sequence_parallel_size': 1},
[36m(main_task pid=13351)[0m                        'rollout': {'compute_prompts_values': False,
[36m(main_task pid=13351)[0m                                    'disable_log_stats': True,
[36m(main_task pid=13351)[0m                                    'do_sample': True,
[36m(main_task pid=13351)[0m                                    'dtype': 'bfloat16',
[36m(main_task pid=13351)[0m                                    'enable_chunked_prefill': True,
[36m(main_task pid=13351)[0m                                    'enforce_eager': True,
[36m(main_task pid=13351)[0m                                    'free_cache_engine': True,
[36m(main_task pid=13351)[0m                                    'gpu_memory_utilization': 0.7,
[36m(main_task pid=13351)[0m                                    'ignore_eos': False,
[36m(main_task pid=13351)[0m                                    'load_format': 'dummy_dtensor',
[36m(main_task pid=13351)[0m                                    'log_prob_max_token_len_per_gpu': 16384,
[36m(main_task pid=13351)[0m                                    'log_prob_micro_batch_size': None,
[36m(main_task pid=13351)[0m                                    'log_prob_micro_batch_size_per_gpu': 32,
[36m(main_task pid=13351)[0m                                    'log_prob_use_dynamic_bsz': False,
[36m(main_task pid=13351)[0m                                    'max_model_len': None,
[36m(main_task pid=13351)[0m                                    'max_num_batched_tokens': 9216,
[36m(main_task pid=13351)[0m                                    'max_num_seqs': 1024,
[36m(main_task pid=13351)[0m                                    'n': 1,
[36m(main_task pid=13351)[0m                                    'name': 'vllm',
[36m(main_task pid=13351)[0m                                    'prompt_length': 512,
[36m(main_task pid=13351)[0m                                    'response_length': 1024,
[36m(main_task pid=13351)[0m                                    'temperature': 1.0,
[36m(main_task pid=13351)[0m                                    'tensor_model_parallel_size': 1,
[36m(main_task pid=13351)[0m                                    'top_k': -1,
[36m(main_task pid=13351)[0m                                    'top_p': 1,
[36m(main_task pid=13351)[0m                                    'use_fire_sampling': False,
[36m(main_task pid=13351)[0m                                    'val_kwargs': {'do_sample': False,
[36m(main_task pid=13351)[0m                                                   'n': 1,
[36m(main_task pid=13351)[0m                                                   'temperature': 0,
[36m(main_task pid=13351)[0m                                                   'top_k': -1,
[36m(main_task pid=13351)[0m                                                   'top_p': 1.0}}},
[36m(main_task pid=13351)[0m  'algorithm': {'adv_estimator': 'gae',
[36m(main_task pid=13351)[0m                'gamma': 1.0,
[36m(main_task pid=13351)[0m                'kl_ctrl': {'kl_coef': 0.001, 'type': 'fixed'},
[36m(main_task pid=13351)[0m                'kl_penalty': 'kl',
[36m(main_task pid=13351)[0m                'lam': 1.0},
[36m(main_task pid=13351)[0m  'critic': {'cliprange_value': 0.5,
[36m(main_task pid=13351)[0m             'estimate_prompts_value': False,
[36m(main_task pid=13351)[0m             'forward_max_token_len_per_gpu': 32768,
[36m(main_task pid=13351)[0m             'forward_micro_batch_size': None,
[36m(main_task pid=13351)[0m             'forward_micro_batch_size_per_gpu': 32,
[36m(main_task pid=13351)[0m             'grad_clip': 1.0,
[36m(main_task pid=13351)[0m             'model': {'enable_gradient_checkpointing': True,
[36m(main_task pid=13351)[0m                       'external_lib': None,
[36m(main_task pid=13351)[0m                       'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=13351)[0m                                       'optimizer_offload': False,
[36m(main_task pid=13351)[0m                                       'param_offload': False,
[36m(main_task pid=13351)[0m                                       'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=13351)[0m                       'override_config': {},
[36m(main_task pid=13351)[0m                       'path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=13351)[0m                       'tokenizer_path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=13351)[0m                       'use_remove_padding': False},
[36m(main_task pid=13351)[0m             'optim': {'lr': 1e-05,
[36m(main_task pid=13351)[0m                       'lr_warmup_steps_ratio': 0.0,
[36m(main_task pid=13351)[0m                       'min_lr_ratio': None,
[36m(main_task pid=13351)[0m                       'total_training_steps': -1,
[36m(main_task pid=13351)[0m                       'warmup_style': 'constant'},
[36m(main_task pid=13351)[0m             'ppo_epochs': 1,
[36m(main_task pid=13351)[0m             'ppo_max_token_len_per_gpu': 32768,
[36m(main_task pid=13351)[0m             'ppo_micro_batch_size': None,
[36m(main_task pid=13351)[0m             'ppo_micro_batch_size_per_gpu': 32,
[36m(main_task pid=13351)[0m             'ppo_mini_batch_size': 256,
[36m(main_task pid=13351)[0m             'shuffle': False,
[36m(main_task pid=13351)[0m             'strategy': 'fsdp',
[36m(main_task pid=13351)[0m             'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=13351)[0m             'use_dynamic_bsz': False},
[36m(main_task pid=13351)[0m  'curriculum': {'p_thres': 0.5,
[36m(main_task pid=13351)[0m                 'subsample_criterion': 'square-inverse',
[36m(main_task pid=13351)[0m                 'train_batch_size_pool': 3072,
[36m(main_task pid=13351)[0m                 'use_curriculum_learning': False,
[36m(main_task pid=13351)[0m                 'warmup_steps': 2},
[36m(main_task pid=13351)[0m  'custom_reward_function': {'name': 'compute_score', 'path': None},
[36m(main_task pid=13351)[0m  'data': {'filter_overlong_prompts': True,
[36m(main_task pid=13351)[0m           'image_key': 'images',
[36m(main_task pid=13351)[0m           'max_prompt_length': 512,
[36m(main_task pid=13351)[0m           'max_response_length': 1024,
[36m(main_task pid=13351)[0m           'prompt_key': 'prompt',
[36m(main_task pid=13351)[0m           'return_raw_chat': False,
[36m(main_task pid=13351)[0m           'return_raw_input_ids': False,
[36m(main_task pid=13351)[0m           'shuffle': True,
[36m(main_task pid=13351)[0m           'tokenizer': None,
[36m(main_task pid=13351)[0m           'train_batch_size': 1024,
[36m(main_task pid=13351)[0m           'train_files': './data/DAPO-base/train.parquet',
[36m(main_task pid=13351)[0m           'truncation': 'error',
[36m(main_task pid=13351)[0m           'use_chat_template': False,
[36m(main_task pid=13351)[0m           'val_batch_size': None,
[36m(main_task pid=13351)[0m           'val_files': './data/math500-base/test.parquet'},
[36m(main_task pid=13351)[0m  'reward_model': {'enable': False,
[36m(main_task pid=13351)[0m                   'forward_max_token_len_per_gpu': 32768,
[36m(main_task pid=13351)[0m                   'max_length': None,
[36m(main_task pid=13351)[0m                   'micro_batch_size': None,
[36m(main_task pid=13351)[0m                   'micro_batch_size_per_gpu': None,
[36m(main_task pid=13351)[0m                   'model': {'external_lib': None,
[36m(main_task pid=13351)[0m                             'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=13351)[0m                                             'param_offload': False,
[36m(main_task pid=13351)[0m                                             'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=13351)[0m                             'input_tokenizer': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=13351)[0m                             'path': '~/models/FsfairX-LLaMA3-RM-v0.1',
[36m(main_task pid=13351)[0m                             'use_remove_padding': False},
[36m(main_task pid=13351)[0m                   'reward_manager': 'naive',
[36m(main_task pid=13351)[0m                   'strategy': 'fsdp',
[36m(main_task pid=13351)[0m                   'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=13351)[0m                   'use_dynamic_bsz': False},
[36m(main_task pid=13351)[0m  'trainer': {'balance_batch': True,
[36m(main_task pid=13351)[0m              'critic_warmup': 0,
[36m(main_task pid=13351)[0m              'default_hdfs_dir': None,
[36m(main_task pid=13351)[0m              'default_local_dir': 'checkpoints/grpo/ppo_Math1.5B_tok1k_dapo17k',
[36m(main_task pid=13351)[0m              'del_local_ckpt_after_load': False,
[36m(main_task pid=13351)[0m              'experiment_name': 'ppo_Math1.5B_tok1k_dapo17k',
[36m(main_task pid=13351)[0m              'logger': ['console', 'wandb'],
[36m(main_task pid=13351)[0m              'n_gpus_per_node': 4,
[36m(main_task pid=13351)[0m              'nnodes': 1,
[36m(main_task pid=13351)[0m              'project_name': 'grpo',
[36m(main_task pid=13351)[0m              'remove_previous_ckpt_in_save': False,
[36m(main_task pid=13351)[0m              'resume_from_path': False,
[36m(main_task pid=13351)[0m              'resume_mode': 'auto',
[36m(main_task pid=13351)[0m              'save_freq': -1,
[36m(main_task pid=13351)[0m              'test_freq': 3,
[36m(main_task pid=13351)[0m              'total_epochs': 10,
[36m(main_task pid=13351)[0m              'total_training_steps': None,
[36m(main_task pid=13351)[0m              'val_before_train': True,
[36m(main_task pid=13351)[0m              'val_generations_to_log_to_wandb': 0}}
[36m(main_task pid=13351)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(main_task pid=13351)[0m No module named 'vllm._version'
[36m(main_task pid=13351)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(main_task pid=13351)[0m [validate_config] All configuration checks passed successfully!
[36m(main_task pid=13351)[0m dataset len: 1791700
[36m(main_task pid=13351)[0m Example prompt before filtering: [{'content': 'Solve the following math problem step by step. The last line of your response should be of the form Answer: $Answer (without quotes) where $Answer is the answer to the problem.\n\nIn triangle $ABC$, $\\sin \\angle A = \\frac{4}{5}$ and $\\angle A < 90^\\circ$. Let $D$ be a point outside triangle $ABC$ such that $\\angle BAD = \\angle DAC$ and $\\angle BDC = 90^\\circ$. Suppose that $AD = 1$ and that $\\frac{BD}{CD} = \\frac{3}{2}$. If $AB + AC$ can be expressed in the form $\\frac{a\\sqrt{b}}{c}$ where $a, b, c$ are pairwise relatively prime integers, find $a + b + c$.\n\nRemember to put your answer on its own line after "Answer:".', 'role': 'user'}]
Error executing job with overrides: ['data.train_files=./data/DAPO-base/train.parquet', 'data.val_files=./data/math500-base/test.parquet', 'data.train_batch_size=1024', 'data.max_prompt_length=512', 'data.max_response_length=1024', 'data.filter_overlong_prompts=True', 'data.use_chat_template=False', 'actor_rollout_ref.model.path=Qwen/Qwen2.5-1.5B', 'actor_rollout_ref.model.use_remove_padding=True', 'actor_rollout_ref.actor.optim.lr=1e-6', 'actor_rollout_ref.actor.use_dynamic_bsz=False', 'actor_rollout_ref.actor.use_doctor_grpo=True', 'actor_rollout_ref.actor.ppo_mini_batch_size=256', 'actor_rollout_ref.actor.ppo_micro_batch_size_per_gpu=32', 'actor_rollout_ref.rollout.log_prob_micro_batch_size_per_gpu=32', 'actor_rollout_ref.rollout.tensor_model_parallel_size=1', 'actor_rollout_ref.rollout.name=vllm', 'actor_rollout_ref.rollout.max_num_batched_tokens=9216', 'actor_rollout_ref.rollout.gpu_memory_utilization=0.7', 'actor_rollout_ref.rollout.val_kwargs.n=1', 'actor_rollout_ref.rollout.compute_prompts_values=False', 'actor_rollout_ref.ref.log_prob_micro_batch_size_per_gpu=32', 'critic.optim.lr=1e-5', 'critic.model.path=Qwen/Qwen2.5-1.5B', 'critic.ppo_micro_batch_size_per_gpu=32', 'algorithm.kl_ctrl.kl_coef=0.001', 'trainer.logger=[console,wandb]', '+trainer.val_before_train=True', 'trainer.default_hdfs_dir=null', 'trainer.n_gpus_per_node=4', 'trainer.nnodes=1', 'trainer.save_freq=-1', 'trainer.test_freq=3', 'trainer.project_name=grpo', 'trainer.experiment_name=ppo_Math1.5B_tok1k_dapo17k', 'trainer.total_epochs=10']
Traceback (most recent call last):
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 54, in main
    run_ppo(config)
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 71, in run_ppo
    ray.get(main_task.remote(config))
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/worker.py", line 2771, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/worker.py", line 919, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(TypeError): [36mray::main_task()[39m (pid=13351, ip=192.168.159.207)
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 170, in main_task
    trainer = RayPPOTrainer(config=config,
  File "/home/jovyan/project/verl/verl/trainer/ppo/ray_trainer.py", line 310, in __init__
    self._create_dataloader()
  File "/home/jovyan/project/verl/verl/trainer/ppo/ray_trainer.py", line 408, in _create_dataloader
    self.train_dataset = RLHFDataset(parquet_files=self.config.data.train_files,
  File "/home/jovyan/project/verl/verl/utils/dataset/rl_dataset.py", line 119, in __init__
    self._read_files_and_tokenize()
  File "/home/jovyan/project/verl/verl/utils/dataset/rl_dataset.py", line 151, in _read_files_and_tokenize
    self.dataframe = self.dataframe[self.dataframe.apply(lambda doc: len(
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/pandas/core/frame.py", line 10374, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/pandas/core/apply.py", line 916, in apply
    return self.apply_standard()
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/pandas/core/apply.py", line 1063, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/pandas/core/apply.py", line 1081, in apply_series_generator
    results[i] = self.func(v, *self.args, **self.kwargs)
  File "/home/jovyan/project/verl/verl/utils/dataset/rl_dataset.py", line 152, in <lambda>
    tokenizer.encode(doc[prompt_key], add_special_tokens=False)) <= self.max_prompt_length,
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 2627, in encode
    encoded_inputs = self.encode_plus(
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 3046, in encode_plus
    return self._encode_plus(
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/transformers/tokenization_utils_fast.py", line 600, in _encode_plus
    batched_output = self._batch_encode_plus(
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/transformers/tokenization_utils_fast.py", line 526, in _batch_encode_plus
    encodings = self._tokenizer.encode_batch(
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
wandb: Appending key for api.wandb.ai to your netrc file: /home/jovyan/.netrc
wandb: W&B API key is configured. Use `wandb login --relogin` to force relogin
Running with hyperparameters:
Actor LR: 1e-6
Critic LR: 1e-5
KL Coefficient: 0.001
Number of Generations Validation: 1
Train Batch Size: 1024
PPO Mini Batch Size: 256
PPO Micro Batch Size: 32
Total Epochs: 10
Max Response Length: 1024
GPU Memory Utilization: 0.7
Test Frequency: 3
Number of GPUs: 4
Compute Prompts Values: False
Experiment Name: ppo_Math1.5B_tok1k_dapo17k
2025-04-18 17:22:28,911	INFO worker.py:1832 -- Started a local Ray instance. View the dashboard at [1m[32m127.0.0.1:8265 [39m[22m
[36m(main_task pid=20870)[0m {'actor_rollout_ref': {'actor': {'clip_ratio': 0.2,
[36m(main_task pid=20870)[0m                                  'entropy_coeff': 0.001,
[36m(main_task pid=20870)[0m                                  'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=20870)[0m                                                  'optimizer_offload': False,
[36m(main_task pid=20870)[0m                                                  'param_offload': False,
[36m(main_task pid=20870)[0m                                                  'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=20870)[0m                                  'grad_clip': 1.0,
[36m(main_task pid=20870)[0m                                  'kl_loss_coef': 0.001,
[36m(main_task pid=20870)[0m                                  'kl_loss_type': 'low_var_kl',
[36m(main_task pid=20870)[0m                                  'optim': {'lr': 1e-06,
[36m(main_task pid=20870)[0m                                            'lr_warmup_steps': -1,
[36m(main_task pid=20870)[0m                                            'lr_warmup_steps_ratio': 0.0,
[36m(main_task pid=20870)[0m                                            'min_lr_ratio': None,
[36m(main_task pid=20870)[0m                                            'total_training_steps': -1,
[36m(main_task pid=20870)[0m                                            'warmup_style': 'constant'},
[36m(main_task pid=20870)[0m                                  'ppo_epochs': 1,
[36m(main_task pid=20870)[0m                                  'ppo_max_token_len_per_gpu': 16384,
[36m(main_task pid=20870)[0m                                  'ppo_micro_batch_size': None,
[36m(main_task pid=20870)[0m                                  'ppo_micro_batch_size_per_gpu': 32,
[36m(main_task pid=20870)[0m                                  'ppo_mini_batch_size': 256,
[36m(main_task pid=20870)[0m                                  'response_length': 1024,
[36m(main_task pid=20870)[0m                                  'shuffle': False,
[36m(main_task pid=20870)[0m                                  'strategy': 'fsdp',
[36m(main_task pid=20870)[0m                                  'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=20870)[0m                                  'use_doctor_grpo': True,
[36m(main_task pid=20870)[0m                                  'use_dynamic_bsz': False,
[36m(main_task pid=20870)[0m                                  'use_kl_loss': False,
[36m(main_task pid=20870)[0m                                  'use_torch_compile': True},
[36m(main_task pid=20870)[0m                        'hybrid_engine': True,
[36m(main_task pid=20870)[0m                        'model': {'enable_gradient_checkpointing': True,
[36m(main_task pid=20870)[0m                                  'external_lib': None,
[36m(main_task pid=20870)[0m                                  'override_config': {},
[36m(main_task pid=20870)[0m                                  'path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=20870)[0m                                  'use_remove_padding': True},
[36m(main_task pid=20870)[0m                        'ref': {'fsdp_config': {'param_offload': False,
[36m(main_task pid=20870)[0m                                                'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=20870)[0m                                'log_prob_max_token_len_per_gpu': 16384,
[36m(main_task pid=20870)[0m                                'log_prob_micro_batch_size': None,
[36m(main_task pid=20870)[0m                                'log_prob_micro_batch_size_per_gpu': 32,
[36m(main_task pid=20870)[0m                                'log_prob_use_dynamic_bsz': False,
[36m(main_task pid=20870)[0m                                'ulysses_sequence_parallel_size': 1},
[36m(main_task pid=20870)[0m                        'rollout': {'compute_prompts_values': False,
[36m(main_task pid=20870)[0m                                    'disable_log_stats': True,
[36m(main_task pid=20870)[0m                                    'do_sample': True,
[36m(main_task pid=20870)[0m                                    'dtype': 'bfloat16',
[36m(main_task pid=20870)[0m                                    'enable_chunked_prefill': True,
[36m(main_task pid=20870)[0m                                    'enforce_eager': True,
[36m(main_task pid=20870)[0m                                    'free_cache_engine': True,
[36m(main_task pid=20870)[0m                                    'gpu_memory_utilization': 0.7,
[36m(main_task pid=20870)[0m                                    'ignore_eos': False,
[36m(main_task pid=20870)[0m                                    'load_format': 'dummy_dtensor',
[36m(main_task pid=20870)[0m                                    'log_prob_max_token_len_per_gpu': 16384,
[36m(main_task pid=20870)[0m                                    'log_prob_micro_batch_size': None,
[36m(main_task pid=20870)[0m                                    'log_prob_micro_batch_size_per_gpu': 32,
[36m(main_task pid=20870)[0m                                    'log_prob_use_dynamic_bsz': False,
[36m(main_task pid=20870)[0m                                    'max_model_len': None,
[36m(main_task pid=20870)[0m                                    'max_num_batched_tokens': 9216,
[36m(main_task pid=20870)[0m                                    'max_num_seqs': 1024,
[36m(main_task pid=20870)[0m                                    'n': 1,
[36m(main_task pid=20870)[0m                                    'name': 'vllm',
[36m(main_task pid=20870)[0m                                    'prompt_length': 512,
[36m(main_task pid=20870)[0m                                    'response_length': 1024,
[36m(main_task pid=20870)[0m                                    'temperature': 1.0,
[36m(main_task pid=20870)[0m                                    'tensor_model_parallel_size': 1,
[36m(main_task pid=20870)[0m                                    'top_k': -1,
[36m(main_task pid=20870)[0m                                    'top_p': 1,
[36m(main_task pid=20870)[0m                                    'use_fire_sampling': False,
[36m(main_task pid=20870)[0m                                    'val_kwargs': {'do_sample': False,
[36m(main_task pid=20870)[0m                                                   'n': 1,
[36m(main_task pid=20870)[0m                                                   'temperature': 0,
[36m(main_task pid=20870)[0m                                                   'top_k': -1,
[36m(main_task pid=20870)[0m                                                   'top_p': 1.0}}},
[36m(main_task pid=20870)[0m  'algorithm': {'adv_estimator': 'gae',
[36m(main_task pid=20870)[0m                'gamma': 1.0,
[36m(main_task pid=20870)[0m                'kl_ctrl': {'kl_coef': 0.001, 'type': 'fixed'},
[36m(main_task pid=20870)[0m                'kl_penalty': 'kl',
[36m(main_task pid=20870)[0m                'lam': 1.0},
[36m(main_task pid=20870)[0m  'critic': {'cliprange_value': 0.5,
[36m(main_task pid=20870)[0m             'estimate_prompts_value': False,
[36m(main_task pid=20870)[0m             'forward_max_token_len_per_gpu': 32768,
[36m(main_task pid=20870)[0m             'forward_micro_batch_size': None,
[36m(main_task pid=20870)[0m             'forward_micro_batch_size_per_gpu': 32,
[36m(main_task pid=20870)[0m             'grad_clip': 1.0,
[36m(main_task pid=20870)[0m             'model': {'enable_gradient_checkpointing': True,
[36m(main_task pid=20870)[0m                       'external_lib': None,
[36m(main_task pid=20870)[0m                       'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=20870)[0m                                       'optimizer_offload': False,
[36m(main_task pid=20870)[0m                                       'param_offload': False,
[36m(main_task pid=20870)[0m                                       'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=20870)[0m                       'override_config': {},
[36m(main_task pid=20870)[0m                       'path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=20870)[0m                       'tokenizer_path': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=20870)[0m                       'use_remove_padding': False},
[36m(main_task pid=20870)[0m             'optim': {'lr': 1e-05,
[36m(main_task pid=20870)[0m                       'lr_warmup_steps_ratio': 0.0,
[36m(main_task pid=20870)[0m                       'min_lr_ratio': None,
[36m(main_task pid=20870)[0m                       'total_training_steps': -1,
[36m(main_task pid=20870)[0m                       'warmup_style': 'constant'},
[36m(main_task pid=20870)[0m             'ppo_epochs': 1,
[36m(main_task pid=20870)[0m             'ppo_max_token_len_per_gpu': 32768,
[36m(main_task pid=20870)[0m             'ppo_micro_batch_size': None,
[36m(main_task pid=20870)[0m             'ppo_micro_batch_size_per_gpu': 32,
[36m(main_task pid=20870)[0m             'ppo_mini_batch_size': 256,
[36m(main_task pid=20870)[0m             'shuffle': False,
[36m(main_task pid=20870)[0m             'strategy': 'fsdp',
[36m(main_task pid=20870)[0m             'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=20870)[0m             'use_dynamic_bsz': False},
[36m(main_task pid=20870)[0m  'curriculum': {'p_thres': 0.5,
[36m(main_task pid=20870)[0m                 'subsample_criterion': 'square-inverse',
[36m(main_task pid=20870)[0m                 'train_batch_size_pool': 3072,
[36m(main_task pid=20870)[0m                 'use_curriculum_learning': False,
[36m(main_task pid=20870)[0m                 'warmup_steps': 2},
[36m(main_task pid=20870)[0m  'custom_reward_function': {'name': 'compute_score', 'path': None},
[36m(main_task pid=20870)[0m  'data': {'filter_overlong_prompts': True,
[36m(main_task pid=20870)[0m           'image_key': 'images',
[36m(main_task pid=20870)[0m           'max_prompt_length': 512,
[36m(main_task pid=20870)[0m           'max_response_length': 1024,
[36m(main_task pid=20870)[0m           'prompt_key': 'prompt',
[36m(main_task pid=20870)[0m           'return_raw_chat': False,
[36m(main_task pid=20870)[0m           'return_raw_input_ids': False,
[36m(main_task pid=20870)[0m           'shuffle': True,
[36m(main_task pid=20870)[0m           'tokenizer': None,
[36m(main_task pid=20870)[0m           'train_batch_size': 1024,
[36m(main_task pid=20870)[0m           'train_files': './data/DAPO-17k-base/train.parquet',
[36m(main_task pid=20870)[0m           'truncation': 'error',
[36m(main_task pid=20870)[0m           'use_chat_template': False,
[36m(main_task pid=20870)[0m           'val_batch_size': None,
[36m(main_task pid=20870)[0m           'val_files': './data/math500-base/test.parquet'},
[36m(main_task pid=20870)[0m  'reward_model': {'enable': False,
[36m(main_task pid=20870)[0m                   'forward_max_token_len_per_gpu': 32768,
[36m(main_task pid=20870)[0m                   'max_length': None,
[36m(main_task pid=20870)[0m                   'micro_batch_size': None,
[36m(main_task pid=20870)[0m                   'micro_batch_size_per_gpu': None,
[36m(main_task pid=20870)[0m                   'model': {'external_lib': None,
[36m(main_task pid=20870)[0m                             'fsdp_config': {'fsdp_size': -1,
[36m(main_task pid=20870)[0m                                             'param_offload': False,
[36m(main_task pid=20870)[0m                                             'wrap_policy': {'min_num_params': 0}},
[36m(main_task pid=20870)[0m                             'input_tokenizer': 'Qwen/Qwen2.5-1.5B',
[36m(main_task pid=20870)[0m                             'path': '~/models/FsfairX-LLaMA3-RM-v0.1',
[36m(main_task pid=20870)[0m                             'use_remove_padding': False},
[36m(main_task pid=20870)[0m                   'reward_manager': 'naive',
[36m(main_task pid=20870)[0m                   'strategy': 'fsdp',
[36m(main_task pid=20870)[0m                   'ulysses_sequence_parallel_size': 1,
[36m(main_task pid=20870)[0m                   'use_dynamic_bsz': False},
[36m(main_task pid=20870)[0m  'trainer': {'balance_batch': True,
[36m(main_task pid=20870)[0m              'critic_warmup': 0,
[36m(main_task pid=20870)[0m              'default_hdfs_dir': None,
[36m(main_task pid=20870)[0m              'default_local_dir': 'checkpoints/grpo/ppo_Math1.5B_tok1k_dapo17k',
[36m(main_task pid=20870)[0m              'del_local_ckpt_after_load': False,
[36m(main_task pid=20870)[0m              'experiment_name': 'ppo_Math1.5B_tok1k_dapo17k',
[36m(main_task pid=20870)[0m              'logger': ['console', 'wandb'],
[36m(main_task pid=20870)[0m              'n_gpus_per_node': 4,
[36m(main_task pid=20870)[0m              'nnodes': 1,
[36m(main_task pid=20870)[0m              'project_name': 'grpo',
[36m(main_task pid=20870)[0m              'remove_previous_ckpt_in_save': False,
[36m(main_task pid=20870)[0m              'resume_from_path': False,
[36m(main_task pid=20870)[0m              'resume_mode': 'auto',
[36m(main_task pid=20870)[0m              'save_freq': -1,
[36m(main_task pid=20870)[0m              'test_freq': 3,
[36m(main_task pid=20870)[0m              'total_epochs': 10,
[36m(main_task pid=20870)[0m              'total_training_steps': None,
[36m(main_task pid=20870)[0m              'val_before_train': True,
[36m(main_task pid=20870)[0m              'val_generations_to_log_to_wandb': 0}}
[36m(main_task pid=20870)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(main_task pid=20870)[0m No module named 'vllm._version'
[36m(main_task pid=20870)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(main_task pid=20870)[0m [validate_config] All configuration checks passed successfully!
[36m(main_task pid=20870)[0m dataset len: 1791700
[36m(main_task pid=20870)[0m Example prompt before filtering: Solve the following math problem step by step. The last line of your response should be of the form Answer: $Answer (without quotes) where $Answer is the answer to the problem.
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m In triangle $ABC$, $\sin \angle A = \frac{4}{5}$ and $\angle A < 90^\circ$. Let $D$ be a point outside triangle $ABC$ such that $\angle BAD = \angle DAC$ and $\angle BDC = 90^\circ$. Suppose that $AD = 1$ and that $\frac{BD}{CD} = \frac{3}{2}$. If $AB + AC$ can be expressed in the form $\frac{a\sqrt{b}}{c}$ where $a, b, c$ are pairwise relatively prime integers, find $a + b + c$.
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m Remember to put your answer on its own line after "Answer:".
[36m(main_task pid=20870)[0m filter dataset len: 1786000
[36m(main_task pid=20870)[0m dataset len: 500
[36m(main_task pid=20870)[0m Example prompt before filtering: Convert the point $(0,3)$ in rectangular coordinates to polar coordinates.  Enter your answer in the form $(r,\theta),$ where $r > 0$ and $0 \le \theta < 2 \pi.$ Let's think step by step and output the final answer within \boxed{}.
[36m(main_task pid=20870)[0m filter dataset len: 497
[36m(main_task pid=20870)[0m Reducing validation dataset from 497 to 496 examples to make it divisible by 4 GPUs
[36m(main_task pid=20870)[0m Size of train dataloader: 1744
[36m(main_task pid=20870)[0m Size of val dataloader: 1
[36m(main_task pid=20870)[0m Total training steps: 17440
[36m(main_task pid=20870)[0m DeprecationWarning: `ray.state.available_resources_per_node` is a private attribute and access will be removed in a future Ray version.
[36m(pid=26820)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=26820)[0m No module named 'vllm._version'
[36m(pid=26820)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(pid=27023)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=27023)[0m No module named 'vllm._version'
[36m(pid=27023)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(pid=27025)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=27025)[0m No module named 'vllm._version'
[36m(pid=27025)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(WorkerDict pid=26820)[0m Critic overriding config {'bos_token_id': None, 'eos_token_id': 151643, 'pad_token_id': 151643}
[36m(WorkerDict pid=26820)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForTokenClassification is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=26820)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[36m(WorkerDict pid=26820)[0m Some weights of Qwen2ForTokenClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-1.5B and are newly initialized: ['score.bias', 'score.weight']
[36m(WorkerDict pid=26820)[0m You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[36m(pid=27024)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=27024)[0m No module named 'vllm._version'
[36m(pid=27024)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(WorkerDict pid=27024)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForTokenClassification is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 3x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(WorkerDict pid=27024)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=26820)[0m Qwen2ForTokenClassification contains 1.54B parameters
[36m(WorkerDict pid=26820)[0m Before critic FSDP, memory allocated (GB): 0.0, memory reserved (GB): 0.0
[36m(WorkerDict pid=26820)[0m NCCL version 2.20.5+cuda12.4
[36m(WorkerDict pid=26820)[0m After critic FSDP, memory allocated (GB): 1.4377117156982422, memory reserved (GB): 4.63671875
[36m(WorkerDict pid=26820)[0m Total steps: 17440, num_warmup_steps: 0
[36m(WorkerDict pid=26820)[0m Critic use_remove_padding=False
[36m(WorkerDict pid=26820)[0m Model config after override: Qwen2Config {
[36m(WorkerDict pid=26820)[0m   "_name_or_path": "Qwen/Qwen2.5-1.5B",
[36m(WorkerDict pid=26820)[0m   "architectures": [
[36m(WorkerDict pid=26820)[0m     "Qwen2ForCausalLM"
[36m(WorkerDict pid=26820)[0m   ],
[36m(WorkerDict pid=26820)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=26820)[0m   "eos_token_id": 151643,
[36m(WorkerDict pid=26820)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=26820)[0m   "hidden_size": 1536,
[36m(WorkerDict pid=26820)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=26820)[0m   "intermediate_size": 8960,
[36m(WorkerDict pid=26820)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=26820)[0m   "max_window_layers": 28,
[36m(WorkerDict pid=26820)[0m   "model_type": "qwen2",
[36m(WorkerDict pid=26820)[0m   "num_attention_heads": 12,
[36m(WorkerDict pid=26820)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=26820)[0m   "num_key_value_heads": 2,
[36m(WorkerDict pid=26820)[0m   "pad_token_id": 151643,
[36m(WorkerDict pid=26820)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=26820)[0m   "rope_scaling": null,
[36m(WorkerDict pid=26820)[0m   "rope_theta": 1000000.0,
[36m(WorkerDict pid=26820)[0m   "sliding_window": null,
[36m(WorkerDict pid=26820)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=26820)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=26820)[0m   "transformers_version": "4.47.1",
[36m(WorkerDict pid=26820)[0m   "use_cache": true,
[36m(WorkerDict pid=26820)[0m   "use_mrope": false,
[36m(WorkerDict pid=26820)[0m   "use_sliding_window": false,
[36m(WorkerDict pid=26820)[0m   "vocab_size": 151936
[36m(WorkerDict pid=26820)[0m }
[36m(WorkerDict pid=26820)[0m 
[36m(WorkerDict pid=26820)[0m Qwen2ForCausalLM contains 1.54B parameters
[36m(WorkerDict pid=26820)[0m wrap_policy: functools.partial(<function _or_policy at 0x7fac49ddbbe0>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7fac49ddbac0>, transformer_layer_cls={<class 'transformers.models.qwen2.modeling_qwen2.Qwen2DecoderLayer'>})])
[36m(WorkerDict pid=27025)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=27024)[0m Some weights of Qwen2ForTokenClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-1.5B and are newly initialized: ['score.bias', 'score.weight'][32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=27024)[0m You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=27025)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=26820)[0m Model config after override: Qwen2Config {
[36m(WorkerDict pid=26820)[0m   "_name_or_path": "Qwen/Qwen2.5-1.5B",
[36m(WorkerDict pid=26820)[0m   "architectures": [
[36m(WorkerDict pid=26820)[0m     "Qwen2ForCausalLM"
[36m(WorkerDict pid=26820)[0m   ],
[36m(WorkerDict pid=26820)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=26820)[0m   "eos_token_id": 151643,
[36m(WorkerDict pid=26820)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=26820)[0m   "hidden_size": 1536,
[36m(WorkerDict pid=26820)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=26820)[0m   "intermediate_size": 8960,
[36m(WorkerDict pid=26820)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=26820)[0m   "max_window_layers": 28,
[36m(WorkerDict pid=26820)[0m   "model_type": "qwen2",
[36m(WorkerDict pid=26820)[0m   "num_attention_heads": 12,
[36m(WorkerDict pid=26820)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=26820)[0m   "num_key_value_heads": 2,
[36m(WorkerDict pid=26820)[0m   "pad_token_id": 151643,
[36m(WorkerDict pid=26820)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=26820)[0m   "rope_scaling": null,
[36m(WorkerDict pid=26820)[0m   "rope_theta": 1000000.0,
[36m(WorkerDict pid=26820)[0m   "sliding_window": null,
[36m(WorkerDict pid=26820)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=26820)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=26820)[0m   "transformers_version": "4.47.1",
[36m(WorkerDict pid=26820)[0m   "use_cache": true,
[36m(WorkerDict pid=26820)[0m   "use_mrope": false,
[36m(WorkerDict pid=26820)[0m   "use_sliding_window": false,
[36m(WorkerDict pid=26820)[0m   "vocab_size": 151936
[36m(WorkerDict pid=26820)[0m }
[36m(WorkerDict pid=26820)[0m 
[36m(WorkerDict pid=26820)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=26820)[0m Qwen2ForCausalLM contains 1.54B parameters
[36m(WorkerDict pid=27024)[0m Total steps: 17440, num_warmup_steps: 0[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=27024)[0m Critic use_remove_padding=False[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=26820)[0m Before building vllm rollout, memory allocated (GB): 2.8754353523254395, memory reserved (GB): 6.37890625
[36m(WorkerDict pid=26820)[0m model_hf_config.max_position_embeddings: 131072
[36m(WorkerDict pid=27024)[0m wrap_policy: functools.partial(<function _or_policy at 0x7f936c26bbe0>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7f936c26bac0>, transformer_layer_cls={<class 'transformers.models.qwen2.modeling_qwen2.Qwen2DecoderLayer'>})])[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=27025)[0m WARNING 04-18 17:31:10 config.py:380] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used
[36m(WorkerDict pid=27024)[0m Actor use_remove_padding=True[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=27025)[0m local rank 0
[36m(WorkerDict pid=27024)[0m Total steps: 17440, num_warmup_steps: 0[32m [repeated 4x across cluster][0m
[36m(WorkerDict pid=27023)[0m NCCL version 2.20.5+cuda12.4
[36m(WorkerDict pid=27024)[0m model_hf_config.max_position_embeddings: 131072[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=26820)[0m before init cache memory allocated: 6.220035072GB, reserved: 6.381633536GB
[36m(WorkerDict pid=26820)[0m after init cache memory allocated: 58.977432576GB, reserved: 59.17114368GB
[36m(WorkerDict pid=26820)[0m WARNING 04-18 17:31:11 config.py:380] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=26820)[0m local rank 0[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=27023)[0m kwargs: {'n': 1, 'logprobs': 0, 'max_tokens': 1024, 'detokenize': False, 'temperature': 1.0, 'top_k': -1, 'top_p': 1, 'ignore_eos': False}
[36m(WorkerDict pid=27024)[0m NCCL version 2.20.5+cuda12.4[32m [repeated 2x across cluster][0m
[36m(WorkerDict pid=27023)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:689: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
[36m(WorkerDict pid=27023)[0m   warnings.warn(
[36m(WorkerDict pid=27023)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 2x across cluster][0m
[36m(WorkerDict pid=26820)[0m After building vllm rollout, memory allocated (GB): 52.048779010772705, memory reserved (GB): 55.107421875
[36m(WorkerDict pid=26820)[0m After building sharding manager, memory allocated (GB): 52.048779010772705, memory reserved (GB): 55.107421875
[36m(main_task pid=20870)[0m wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
[36m(main_task pid=20870)[0m wandb: Currently logged in as: rqzhang (sample-efficient-RL) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
[36m(main_task pid=20870)[0m wandb: Tracking run with wandb version 0.19.8
[36m(main_task pid=20870)[0m wandb: Run data is saved locally in /home/jovyan/project/verl/wandb/run-20250418_173121-cvottori
[36m(main_task pid=20870)[0m wandb: Run `wandb offline` to turn off syncing.
[36m(main_task pid=20870)[0m wandb: Syncing run ppo_Math1.5B_tok1k_dapo17k
[36m(main_task pid=20870)[0m wandb: ⭐️ View project at https://wandb.ai/sample-efficient-RL/grpo
[36m(main_task pid=20870)[0m wandb: 🚀 View run at https://wandb.ai/sample-efficient-RL/grpo/runs/cvottori
[36m(main_task pid=20870)[0m Using LocalLogger is deprecated. The constructor API will change 
[36m(main_task pid=20870)[0m Checkpoint tracker file does not exist: %s /home/jovyan/project/verl/checkpoints/grpo/ppo_Math1.5B_tok1k_dapo17k/latest_checkpointed_iteration.txt
[36m(main_task pid=20870)[0m Training from scratch
[36m(main_task pid=20870)[0m test_gen_batch meta info: {'eos_token_id': 151643, 'pad_token_id': 151643, 'recompute_log_prob': False, 'do_sample': False, 'validate': True}
[36m(main_task pid=20870)[0m validation generation end
[36m(WorkerDict pid=27024)[0m kwargs: {'n': 1, 'logprobs': 0, 'max_tokens': 1024, 'detokenize': False, 'temperature': 1.0, 'top_k': -1, 'top_p': 1, 'ignore_eos': False}[32m [repeated 3x across cluster][0m
[36m(main_task pid=20870)[0m Not computing the values of prompts.
[36m(main_task pid=20870)[0m [prompt] Convert the point $(0,3)$ in rectangular coordinates to polar coordinates.  Enter your answer in the form $(r,\theta),$ where $r > 0$ and $0 \le \theta < 2 \pi.$ Let's think step by step and output the final answer within \boxed{}.
[36m(main_task pid=20870)[0m [response]  To convert the point \((0, 3)\) from rectangular coordinates to polar coordinates, we need to find the radius \(r\) and the angle \(\theta\).
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m 1. **Calculate the radius \(r\):**
[36m(main_task pid=20870)[0m    The radius \(r\) is the distance from the origin to the point \((0, 3)\). It can be calculated using the formula:
[36m(main_task pid=20870)[0m    \[
[36m(main_task pid=20870)[0m    r = \sqrt{x^2 + y^2}
[36m(main_task pid=20870)[0m    \]
[36m(main_task pid=20870)[0m    where \(x = 0\) and \(y = 3\).
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m 2. **Calculate the angle \(\theta\):**
[36m(main_task pid=20870)[0m    The angle \(\theta\) is the angle formed with the positive x-axis. It can be calculated using the formula:
[36m(main_task pid=20870)[0m    \[
[36m(main_task pid=20870)[0m    \theta = \arctan\left(\frac{y}{x}\right)
[36m(main_task pid=20870)[0m    \]
[36m(main_task pid=20870)[0m    However, we need to consider the quadrant in which the point lies. Since \(x = 0\) and \(y = 3\), the point lies on the positive y-axis. Therefore, \(\theta = \frac{\pi}{2}\).
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m Let's implement this in Python to get the exact values for \(r\) and \(\theta\).
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m ```python
[36m(main_task pid=20870)[0m import sympy as sp
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m # Define the rectangular coordinates
[36m(main_task pid=20870)[0m x = 0
[36m(main_task pid=20870)[0m y = 3
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m # Calculate the radius r
[36m(main_task pid=20870)[0m r = sp.sqrt(x**2 + y**2)
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m # Calculate the angle theta
[36m(main_task pid=20870)[0m theta = sp.atan2(y, x)
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m # Ensure theta is in the range [0, 2*pi)
[36m(main_task pid=20870)[0m if theta < 0:
[36m(main_task pid=20870)[0m     theta += 2 * sp.pi
[36m(main_task pid=20870)[0m 
[36m(main_task pid=20870)[0m # Print the result
[36m(main_task pid=20870)[0m print(f"r = {r}, theta = {theta}")
[36m(main_task pid=20870)[0m ```
[36m(main_task pid=20870)[0m ```output
[36m(main_task pid=20870)[0m r = 3, theta = pi/2
[36m(main_task pid=20870)[0m ```
[36m(main_task pid=20870)[0m The polar coordinates for the point \((0, 3)\) are \(\boxed{(3, \frac{\pi}{2})}\).<|endoftext|>
[36m(main_task pid=20870)[0m [ground_truth] \left( 3, \frac{\pi}{2} \right)
[36m(main_task pid=20870)[0m [score] 1.0
[36m(main_task pid=20870)[0m ERROR:2025-04-18 17:32:03,568:Error during comparison
[36m(main_task pid=20870)[0m Traceback (most recent call last):
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/grader.py", line 809, in compare_single_extraction_wrapper
[36m(main_task pid=20870)[0m     return compare_single_extraction(g, t)
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/utils.py", line 51, in wrapper
[36m(main_task pid=20870)[0m     return func(*args, **kwargs)
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/grader.py", line 789, in compare_single_extraction
[36m(main_task pid=20870)[0m     return sympy_expr_eq(
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/grader.py", line 667, in sympy_expr_eq
[36m(main_task pid=20870)[0m     return sympy_compare_relational(gold, pred, float_rounding, numeric_precision)
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/grader.py", line 344, in sympy_compare_relational
[36m(main_task pid=20870)[0m     if sympy_solve_and_compare(gold, pred, float_rounding, numeric_precision):
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/math_verify/grader.py", line 275, in sympy_solve_and_compare
[36m(main_task pid=20870)[0m     solved_pred = list(ordered(solve(pred, pred.free_symbols)))
[36m(main_task pid=20870)[0m   File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/sympy/core/sorting.py", line 298, in ordered
[36m(main_task pid=20870)[0m     d[None].extend(seq)
[36m(main_task pid=20870)[0m TypeError: 'StrictLessThan' object is not iterable
[36m(WorkerDict pid=27024)[0m /home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:689: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=27024)[0m   warnings.warn([32m [repeated 3x across cluster][0m
[36m(main_task pid=20870)[0m ("Initial validation metrics: {'val/test_score/di-zhang-fdu/MATH500': "
[36m(main_task pid=20870)[0m  "0.46169354838709675, 'val/pass_rate/avg': 0.46169354838709675, "
[36m(main_task pid=20870)[0m  "'val/pass_rate/median': 0.0, 'val/pass_rate/bucket_0%': 0.5383064516129032, "
[36m(main_task pid=20870)[0m  "'val/pass_rate/bucket_0-20%': 0.0, 'val/pass_rate/bucket_20-40%': 0.0, "
[36m(main_task pid=20870)[0m  "'val/pass_rate/bucket_40-60%': 0.0, 'val/pass_rate/bucket_60-80%': 0.0, "
[36m(main_task pid=20870)[0m  "'val/pass_rate/bucket_80-100%': 0.0, 'val/pass_rate/bucket_100%': "
[36m(main_task pid=20870)[0m  '0.46169354838709675}')
[36m(main_task pid=20870)[0m step:0 - val/test_score/di-zhang-fdu/MATH500:0.462 - val/pass_rate/avg:0.462 - val/pass_rate/median:0.000 - val/pass_rate/bucket_0%:0.538 - val/pass_rate/bucket_0-20%:0.000 - val/pass_rate/bucket_20-40%:0.000 - val/pass_rate/bucket_40-60%:0.000 - val/pass_rate/bucket_60-80%:0.000 - val/pass_rate/bucket_80-100%:0.000 - val/pass_rate/bucket_100%:0.462
[36m(main_task pid=20870)[0m wandb:                                                                                
[36m(main_task pid=20870)[0m wandb: 
[36m(main_task pid=20870)[0m wandb: Run history:
[36m(main_task pid=20870)[0m wandb:                   val/pass_rate/avg ▁
[36m(main_task pid=20870)[0m wandb:             val/pass_rate/bucket_0% ▁
[36m(main_task pid=20870)[0m wandb:          val/pass_rate/bucket_0-20% ▁
[36m(main_task pid=20870)[0m wandb:           val/pass_rate/bucket_100% ▁
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_20-40% ▁
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_40-60% ▁
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_60-80% ▁
[36m(main_task pid=20870)[0m wandb:        val/pass_rate/bucket_80-100% ▁
[36m(main_task pid=20870)[0m wandb:                val/pass_rate/median ▁
[36m(main_task pid=20870)[0m wandb: val/test_score/di-zhang-fdu/MATH500 ▁
[36m(main_task pid=20870)[0m wandb: 
[36m(main_task pid=20870)[0m wandb: Run summary:
[36m(main_task pid=20870)[0m wandb:                   val/pass_rate/avg 0.46169
[36m(main_task pid=20870)[0m wandb:             val/pass_rate/bucket_0% 0.53831
[36m(main_task pid=20870)[0m wandb:          val/pass_rate/bucket_0-20% 0
[36m(main_task pid=20870)[0m wandb:           val/pass_rate/bucket_100% 0.46169
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_20-40% 0
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_40-60% 0
[36m(main_task pid=20870)[0m wandb:         val/pass_rate/bucket_60-80% 0
[36m(main_task pid=20870)[0m wandb:        val/pass_rate/bucket_80-100% 0
[36m(main_task pid=20870)[0m wandb:                val/pass_rate/median 0
[36m(main_task pid=20870)[0m wandb: val/test_score/di-zhang-fdu/MATH500 0.46169
[36m(main_task pid=20870)[0m wandb: 
[36m(main_task pid=20870)[0m wandb: 🚀 View run ppo_Math1.5B_tok1k_dapo17k at: https://wandb.ai/sample-efficient-RL/grpo/runs/cvottori
[36m(main_task pid=20870)[0m wandb: ⭐️ View project at: https://wandb.ai/sample-efficient-RL/grpo
[36m(main_task pid=20870)[0m wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
[36m(main_task pid=20870)[0m wandb: Find logs at: ./wandb/run-20250418_173121-cvottori/logs
Error executing job with overrides: ['data.train_files=./data/DAPO-17k-base/train.parquet', 'data.val_files=./data/math500-base/test.parquet', 'data.train_batch_size=1024', 'data.max_prompt_length=512', 'data.max_response_length=1024', 'data.filter_overlong_prompts=True', 'data.use_chat_template=False', 'actor_rollout_ref.model.path=Qwen/Qwen2.5-1.5B', 'actor_rollout_ref.model.use_remove_padding=True', 'actor_rollout_ref.actor.optim.lr=1e-6', 'actor_rollout_ref.actor.use_dynamic_bsz=False', 'actor_rollout_ref.actor.use_doctor_grpo=True', 'actor_rollout_ref.actor.ppo_mini_batch_size=256', 'actor_rollout_ref.actor.ppo_micro_batch_size_per_gpu=32', 'actor_rollout_ref.rollout.log_prob_micro_batch_size_per_gpu=32', 'actor_rollout_ref.rollout.tensor_model_parallel_size=1', 'actor_rollout_ref.rollout.name=vllm', 'actor_rollout_ref.rollout.max_num_batched_tokens=9216', 'actor_rollout_ref.rollout.gpu_memory_utilization=0.7', 'actor_rollout_ref.rollout.val_kwargs.n=1', 'actor_rollout_ref.rollout.compute_prompts_values=False', 'actor_rollout_ref.ref.log_prob_micro_batch_size_per_gpu=32', 'critic.optim.lr=1e-5', 'critic.model.path=Qwen/Qwen2.5-1.5B', 'critic.ppo_micro_batch_size_per_gpu=32', 'algorithm.kl_ctrl.kl_coef=0.001', 'trainer.logger=[console,wandb]', '+trainer.val_before_train=True', 'trainer.default_hdfs_dir=null', 'trainer.n_gpus_per_node=4', 'trainer.nnodes=1', 'trainer.save_freq=-1', 'trainer.test_freq=3', 'trainer.project_name=grpo', 'trainer.experiment_name=ppo_Math1.5B_tok1k_dapo17k', 'trainer.total_epochs=10']
Traceback (most recent call last):
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 54, in main
    run_ppo(config)
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 71, in run_ppo
    ray.get(main_task.remote(config))
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/worker.py", line 2771, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/home/jovyan/project/miniconda/envs/verl/lib/python3.10/site-packages/ray/_private/worker.py", line 919, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(TypeError): [36mray::main_task()[39m (pid=20870, ip=192.168.159.207)
  File "/home/jovyan/project/verl/verl/trainer/main_ppo.py", line 179, in main_task
    trainer.fit() # RZ: runs as a single process.
  File "/home/jovyan/project/verl/verl/trainer/ppo/ray_trainer.py", line 1028, in fit
    reward_tensor = self.reward_fn(batch)
  File "/home/jovyan/project/verl/verl/workers/reward_manager/naive.py", line 107, in __call__
    reward_tensor[i, valid_response_length - 1] = score
TypeError: can't assign a dict to a torch.FloatTensor

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
